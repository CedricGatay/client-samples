plugins {
    id 'application'
//    id 'scala'
//    id 'com.gluonhq.client-gradle-plugin' version '0.0.15-SNAPSHOT'
    id("com.palantir.graal") version "0.3.0-6-g0b828af"
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    def scala_version = '2.12'
//    compile "org.scala-lang:scala-library:${scala_version}.8"
//    compile "com.typesafe.akka:akka-actor_${scala_version}:2.5.25"

//    compile group: 'log4j', name: 'log4j', version: '1.2.17'
   // compile("io.netty:netty-all:4.1.43.Final")
    //implementation 'io.netty:netty-tcnative-boringssl-static:2.0.26.Final'
/*    compile group: 'org.conscrypt', name: 'conscrypt-openjdk', version: '2.2.1'
    compile group: 'org.eclipse.jetty.alpn', name: 'alpn-api', version: '1.0.0'
    compile group: 'org.eclipse.jetty.npn', name: 'npn-api', version: '8.1.2.v20120308'
*/


    compileClasspath("com.oracle.substratevm:svm:19.2.0.1")
    //compile("com.github.vmencik:graal-akka-slf4j_${scala_version}:0.5.0")
//    compile("org.slf4j:slf4j-jdk14:1.7.26") // java.util.logging works mostly out-of-the-box with SubstrateVM

}

graal {
    graalVersion("19.2.1")
    mainClass("jni.HelloJNI")
    outputName("HelloFX")
    option("-Djava.library.path=/Users/cgatay/Documents/work/acinq/client-samples/Gradle/HelloFX/src/main/java/jni")
    option("-H:CLibraryPath=/Users/cgatay/Documents/work/acinq/client-samples/Gradle/HelloFX/src/main/java/jni")
    option("--report-unsupported-elements-at-runtime")
    option("--allow-incomplete-classpath")
    option("-H:+ReportExceptionStackTraces")
    option("--initialize-at-build-time=jni.HelloJNI")
}
/*
gluonClient {
    //"--initialize-at-build-time",
    //  "--initialize-at-run-time=" +
    //    "akka.protobuf.DescriptorProtos," +
    //    "com.typesafe.config.impl.ConfigImpl$EnvVariablesHolder," +
    //    "com.typesafe.config.impl.ConfigImpl$SystemPropertiesHolder",
    //  "--no-fallback",
    //  "--allow-incomplete-classpath"
    verbose = true
    //reflectionList = []
   //target = "ios" // uncomment to deploy on iOS
   resourcesList = [".conf"]
   // reflectionList = [ "akka.event.DefaultLoggingFilter", "hellofx.HelloJNI" ]
    jniList = [
  //          "hellofx.HelloJNI"
    ]
   //graalPath = "/Users/cgatay/Documents/work/acinq/graalvm-ce-java8-20.0.0-dev/Contents/Home"
   graalPath = "/Users/cgatay/Documents/work/acinq/graalvm-unknown-java11-19.3.0-dev/Contents/Home"
   graalPath = "/Users/cgatay/Documents/work/acinq/graal/graal/sdk/latest_graalvm/graalvm-unknown-java11-20.0.0-dev/Contents/Home"
   //buildStaticLib = true
    nativeBuildOptions = [
//            "--debug-attach" , // remote debug on :8000
            "-Djava.library.path=/Users/cgatay/Documents/work/acinq/client-samples/Gradle/HelloFX/src/main/java/jni",
            "-H:CLibraryPath=/Users/cgatay/Documents/work/acinq/client-samples/Gradle/HelloFX/src/main/java/jni",
            "-H:+JNI",
//            "-H:IncludeResources=.*\\.jnilib" ,
//            "-H:IncludeResources=.*\\.dylib" ,
            "-H:+ReportUnsupportedElementsAtRuntime",
            "-H:+ReportExceptionStackTraces",
            "-H:+TraceClassInitialization",
            "-H:+JNI",
            "--report-unsupported-elements-at-runtime" ,
            "--initialize-at-build-time=jni.HelloJNI",
            //"--no-server" ,
            //"--no-fallback" ,
            //"--allow-incomplete-classpath"
    ]
   //graalPath = "/Users/cgatay/.sdkman/candidates/java/19.2.1-grl/"
   //reflectionConfigFile = "/Users/cgatay/Documents/work/acinq/client-samples/Gradle/HelloFX/src/main/resources/reflectionconfig-ios.json"
}*/


/*
javafx {
    version = "12.0.2"
    modules = [ "javafx.controls" ]
}*/

//mainClassName = 'hellofx.Main'
mainClassName = "jni.HelloJNI"
//compileScala.targetCompatibility = 1.8
